{
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        1805
      ],
      "id": "487263c6-8a70-4522-b3ce-da35ff5b969b",
      "name": "When clicking ‚ÄòExecute workflow‚Äô"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "306fd8d3-3516-4a55-99f6-28db7ee452ce",
              "name": "urls",
              "value": "[\"https://rss.app/feeds/tJuV4zxEGqG9Kgxm.xml\",\"https://es.investing.com/webmaster-tools/rss\"]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        900
      ],
      "id": "629c7193-2388-479d-8bd8-05f4a4022514",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "fieldToSplitOut": "urls",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        220,
        900
      ],
      "id": "795299e0-837e-41fe-9662-ee58a488b256",
      "name": "Split Out"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        440,
        900
      ],
      "id": "61b6fcb3-c9ae-4d0b-ab41-80ba735b581b",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "=https://rss.app/feeds/tJuV4zxEGqG9Kgxm.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        220,
        1905
      ],
      "id": "68156e0c-b9a5-4828-bcc8-db4338d6ca45",
      "name": "RSS Read"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        660,
        900
      ],
      "id": "09c2f079-25e9-4833-8d0a-3696d993bf51",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a senior financial analyst.\nAnalyze the following financial news excerpt and extract structured insights in valid JSON format only.\n\nYour task:\n- Wrap output in forecast attribute\n- Identify only the markets directly affected by the news\n- For each affected market, return: \"impact\", \"news\", \"reason\", \"horizon\"\n- Respond strictly in JSON format only ‚Äî no additional explanation or commentary\n- Do not use special characters that might break the JSON\n- Do not include unaffected or speculative markets\n\n{{ JSON.stringify($json.noticias, null, 2) }}\n\nOUTPUT FORMAT EXAMPLE:\n{\"forecast\":{\n    \"S&P500\": {\n      \"impact\": \"negative\",\n      \"news\": \"Federal Reserve announces 0.75% interest rate hike to combat inflation\",\n      \"reason\": \"Higher interest rates increase borrowing costs and reduce present value of future earnings\",\n      \"horizon\": \"short\"\n    },\n    \"Gold\": {\n      \"impact\": \"positive\", \n      \"news\": \"Geopolitical tensions escalate as trade war intensifies\",\n      \"reason\": \"Trade war uncertainty drives investors toward safe-haven assets like gold\",\n      \"horizon\": \"medium\"\n    }\n  }\n}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1160,
        2060
      ],
      "id": "801d5549-b99a-4355-80d5-5748f8495453",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8b6b737a-3634-4e94-a623-7d2c26cf7598",
              "name": "mensaje_formateado",
              "value": "={{$json[\"title\"]}}*  üìç *Tema:* {{$node[\"Clasificaci√≥n\"].json[\"tema_categorizado\"]}}  üîé *Impacto estimado:* {{$node[\"Impacto Sectorial\"].json[\"choices\"][0][\"message\"][\"content\"]}}  üïí Publicado: {{$json[\"pubDate\"]}}  üîó [Ver fuente]({{$json[\"link\"]}})",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1020,
        800
      ],
      "id": "5463b011-5282-466d-9cc7-159b642bfd60",
      "name": "Edit Fields1",
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1000,
        2280
      ],
      "id": "a09c6e14-7805-434c-aedb-960fb04ccbfa",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "wO8bdhwT4eZHSpl6",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1020,
        1300
      ],
      "id": "a8412b0c-e443-4478-9e8d-59a8bef985d3",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1100,
        1520
      ],
      "id": "aaefa298-a940-4e0d-89a0-a1b678622998",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "wO8bdhwT4eZHSpl6",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0b156287-95e9-435e-b8dc-4598f2b1b4b3",
              "leftValue": 1,
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        0,
        1420
      ],
      "id": "f209502b-98f7-48ea-a801-b1e61f8252c9",
      "name": "If"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1120,
        2360
      ],
      "id": "d95f7737-6323-4eab-9938-2222c26f7656",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "4ZmPZkhmCsEOv3z6",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "123"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1280,
        2380
      ],
      "id": "266c9298-6410-473c-9d53-02cd1d52f442",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "maxItems": 20
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        440,
        1905
      ],
      "id": "41f4d770-6785-4bfc-9b53-8390d8d6a993",
      "name": "Limit"
    },
    {
      "parameters": {
        "jsCode": "const noticias = [];\n\nfor (const item of $(\"Limit\").all()) {\n  noticias.push({\n    title: item.json.title || item.json.contentSnippet,\n    pubDate: item.json.pubDate\n  });\n}\n\nreturn [\n  {\n    json: {\n      noticias\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        1780
      ],
      "id": "460b737f-63f7-4620-863c-140257f2905b",
      "name": "Code"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"affected_markets\": [\"S&P500\", \"Gold\"],\n  \"impact\": {\n    \"S&P500\": {\n      \"impact\": \"negative\",\n      \"reason\": \"Rate hikes tend to lower equity valuations due to higher discount rates.\",\n      \"horizon\": \"short\"\n    },\n    \"Gold\": {\n      \"impact\": \"positive\",\n      \"reason\": \"Uncertainty increases demand for safe-haven assets like gold.\",\n      \"horizon\": \"medium\"\n    }\n  }\n}",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        500,
        1280
      ],
      "id": "9fe8ffe5-6450-4d62-a407-e2c07038e5e3",
      "name": "Structured Output Parser1",
      "notesInFlow": false,
      "disabled": true
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1020,
        1060
      ],
      "id": "f3471772-749a-4ca3-9b36-fc2025d969b4",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "4ZmPZkhmCsEOv3z6",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const raw = $input.first().json.output;\n\n// 1. Limpiar encabezados como \"Here is your JSON:\"\nlet clean = raw.replace(/^(Here is (your )?(the )?(valid )?JSON(:)?)/i, '').trim();\n\n// 2. Quitar delimitadores de bloque Markdown (```)\nclean = clean\n  .replace(/^```(?:json|markdown)?\\n?/i, '')   // inicio ```json\n  .replace(/\\n?```$/g, '')                     // cierre ```\n\n// 3. Extraer solo el contenido JSON hasta el √∫ltimo cierre de llave\nconst endIndex = clean.lastIndexOf('}');\nif (endIndex !== -1) {\n  clean = clean.slice(0, endIndex + 1);\n} else {\n  throw new Error(\"No se encontr√≥ el cierre del JSON (`}`)\");\n}\n\n// 4. Parsear el JSON\nlet parsed;\ntry {\n  parsed = JSON.parse(clean);\n} catch (err) {\n  throw new Error(\"Error al parsear JSON limpio: \" + err.message + \"\\nContenido:\\n\" + clean);\n}\n\nreturn [{ json: parsed }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1640,
        1660
      ],
      "id": "65dce3e2-4c83-406e-b01c-77d7fa9b8894",
      "name": "md to json"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c3c7d051-0deb-4c4a-ae7d-6dc518d3cf56",
              "name": "={{$json.output.replace(/^```(?:json|markdown)?\\n?/, \"\").replace(/\\n?```$/, \"\").replace(/^(Here is the JSON:|Here is your Markdown document:)\\s*/, \"\")}}",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        1160
      ],
      "id": "6e7aa28e-1095-4d27-b52d-e3f563b34dcb",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "updates": [
          "callback_query"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        2005
      ],
      "id": "29878a72-7b03-4392-a4c9-885f797efdce",
      "name": "Telegram Trigger",
      "webhookId": "7ad6c8e9-16bc-4486-8cfc-c556341c5727",
      "credentials": {
        "telegramApi": {
          "id": "Al3RxkAvVIKDc5lr",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "7642032298",
        "text": "={{ $json.markdown }}\n\n",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2136,
        1905
      ],
      "id": "1ac8b6b2-fa6e-4e0e-8e3a-86d0c5ca6503",
      "name": "Send a text message",
      "webhookId": "79170d53-2715-42ac-8f01-b7d33a579a09",
      "credentials": {
        "telegramApi": {
          "id": "Al3RxkAvVIKDc5lr",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function transformSingleToMarkdown(item) {\n  if (!item) return '';\n\n  const data = item;\n\n  const impactEmoji = data.impact === 'positive' ? 'üü¢' : \n                      data.impact === 'negative' ? 'üî¥' : 'üü°';\n\n  const horizonEmoji = data.horizon === 'short' ? '‚ö°' : \n                      data.horizon === 'medium' ? 'üìÖ' : 'üìà';\n\n  const markdown = `${impactEmoji} **${data.impact || 'N/A'}**\\n\\n` +\n                   `üì∞ ${data.news || 'No news'}\\n\\n` +\n                   `üí° *Reason:* ${data.reason || 'No reason'}\\n\\n` +\n                   `${horizonEmoji} *Horizon:* ${data.horizon || 'N/A'}\\n`;\n\n  return markdown;\n}\n\n\n\nreturn $input.first().json.forecasts.map(item => {\n  return {\n    json: {\n      markdown: transformSingleToMarkdown(item.json)\n    }\n  }\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1696,
        1905
      ],
      "id": "6d9e074c-363c-416f-8428-65a9367bb803",
      "name": "json to md"
    },
    {
      "parameters": {
        "fieldToSplitOut": "forecast",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1980,
        1680
      ],
      "id": "82969710-b2f2-4004-a061-0e1ba99a03d6",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "markdown",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1916,
        1905
      ],
      "id": "4ad336bc-5908-44a0-bd8d-58f32aa32e58",
      "name": "Split Out2"
    }
  ],
  "connections": {
    "When clicking ‚ÄòExecute workflow‚Äô": {
      "main": [
        [
          {
            "node": "RSS Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "RSS Read": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "md to json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        []
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          },
          {
            "node": "json to md",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        []
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "md to json": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        []
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "RSS Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "json to md": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "json to md",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c01ba27cceeb0576de0dc69a9a9035e6a56f00ff96c018dae458356ce26ee17f"
  }
}
